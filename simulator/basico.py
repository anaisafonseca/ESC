from ecs_simulator import *

Library.author("Ana√≠sa Fonseca")

Not = Gate('Not', 1, ['in'], ['out'])
Not.set_as_vcc(0,'C')
Not.set_as_gnd(0,'E')
Not.set_as_input(0,'B','in')
Not.set_as_output(0,'C','out')
Not.save()
# Not.test_all()

And = Gate('And', 2, ['a','b'], ['out'])
And.set_as_vcc(0,'C')
And.set_as_gnd(1,'E')
And.connect(0,'E',1,'C')
And.set_as_input(0,'B','a')
And.set_as_input(1,'B','b')
And.set_as_output(0,'E','out')
And.save()
# And.test_all()

Or = Gate('Or', 2, ['a','b'], ['out'])
Or.set_as_vcc(0,'C')
Or.set_as_gnd(1,'E')
Or.connect(0,'C',1,'C')
Or.connect(0,'E',1,'E')
Or.set_as_input(0,'B','a')
Or.set_as_input(1,'B','b')
Or.set_as_output(0,'E','out')
Or.save()
# Or.test_all()

Nand = Gate('Nand', 2, ['a','b'], ['out'])
Nand.set_as_vcc(0,'C')
Nand.set_as_gnd(1,'E')
Nand.connect(0,'E',1,'C')
Nand.set_as_input(0,'B','a')
Nand.set_as_input(1,'B','b')
Nand.set_as_output(0,'C','out')
Nand.save()
# Nand.test_all()

Xor = Circuit('Xor', ['a','b',], ['out'])
Xor.add_components(Or, Nand, And)
Xor.set_as_input(0,'a','a')
Xor.set_as_input(0,'b','b')
Xor.set_as_input(1,'a','a')
Xor.set_as_input(1,'b','b')
Xor.connect(0,'out',2,'a')
Xor.connect(1,'out',2,'b')
Xor.set_as_output(2,'out','out')
Xor.save()
# Xor.test_all()

Mux = Circuit('Mux', ['a','b','sel'], 'out')
Mux.add_components(Not, (And,2), Or)
Mux.set_as_input(1,'a','a')
Mux.set_as_input(2,'b','b')
Mux.set_as_output(3,'out','out')
Mux.connect(1,'out',3,'a')
Mux.connect(2,'out',3,'b')
Mux.set_as_input(0,'in','sel')
Mux.set_as_input(2,'a','sel')
Mux.connect(0,'out',1,'b')
Mux.save()
# Mux.test_all(label_display_order=['sel','a','b'])

Dmux = Circuit('Dmux', ['in', 'sel'], ['a','b'])
Dmux.add_components(Not, And, And)
Dmux.set_as_input(1,'a','in')
Dmux.set_as_input(2,'b','in')
Dmux.set_as_input(2,'a','sel')
Dmux.set_as_output(1,'out','a')
Dmux.set_as_output(2,'out','b')
Dmux.set_as_input(0,'in','sel')
Dmux.connect(0,'out',1,'b')
Dmux.save()
# Dmux.test_all()

# Not = Library.load('Not')
# And = Library.load('And')
# Or = Library.load('Or')
# Nand = Library.load('Nand')
# Xor = Library.load('Xor')
# Mux = Library.load('Mux')
# Dmux = Library.load('Dmux')